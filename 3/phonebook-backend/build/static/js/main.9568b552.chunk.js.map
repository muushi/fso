{"version":3,"sources":["components/Filter.js","components/Notification.js","components/PersonForm.js","components/Persons.js","services/contact.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","value","onChange","Notification","message","errClass","className","PersonForm","onSubmit","name","nameOnChange","number","numberOnChange","type","Persons","persons","handleClick","map","person","onClick","baseUrl","axios","get","then","res","data","obj","post","id","delete","put","App","useState","setPersons","filteredPersons","setFilteredPersons","newName","setNewName","newNumber","setNewNumber","query","setQuery","errorMsg","setErrorMsg","errorClass","setErrorClass","updatePersons","newPersons","filter","toLowerCase","includes","useEffect","contactService","event","target","preventDefault","newPerson","duplicate","find","window","confirm","console","log","setTimeout","catch","err","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAUeA,EARA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvB,OACE,qDACoB,uBAAOD,MAAOA,EAAOC,SAAUA,QCSxCC,EAZM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC/B,OAAgB,OAAZD,EACK,KAIP,qBAAKE,UAAWD,EAAhB,SACGD,KCOQG,EAdI,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,SAAUC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,eAC1D,OACE,uBAAMJ,SAAUA,EAAhB,UACE,yCACQ,uBAAOP,MAAOQ,EAAMP,SAAUQ,IADtC,WAEU,uBAAOT,MAAOU,EAAQT,SAAUU,OAE1C,8BACE,wBAAQC,KAAK,SAAb,uBCNOC,EAFC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAZ,OAA8B,8BAAMD,EAAQE,KAAI,SAAAC,GAAM,OAAI,8BAAsBA,EAAOT,KAA7B,IAAoCS,EAAOP,OAAO,wBAAQQ,QAAS,kBAAMH,EAAYE,IAAnC,sBAA1CA,EAAOT,Y,gBCDnFW,EAAU,eAsBD,EApBA,WAEb,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAkBd,EAfA,SAAAC,GAEb,OADYL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAad,EAVA,SAAAG,GAEb,OADYP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAQd,EALA,SAACG,EAAIjB,GAElB,OADYU,IAAMS,IAAN,UAAaV,EAAb,YAAwBQ,GAAMjB,GAC/BY,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCiFdM,EA9FH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRjB,EADQ,KACCkB,EADD,OAEgCD,mBAAS,IAFzC,mBAERE,EAFQ,KAESC,EAFT,OAGgBH,mBAAS,IAHzB,mBAGRI,EAHQ,KAGCC,EAHD,OAIoBL,mBAAS,IAJ7B,mBAIRM,EAJQ,KAIGC,EAJH,OAKYP,mBAAS,IALrB,mBAKRQ,EALQ,KAKDC,EALC,OAMkBT,mBAAS,MAN3B,mBAMRU,EANQ,KAMEC,EANF,OAOsBX,mBAAS,SAP/B,mBAORY,EAPQ,KAOIC,EAPJ,KAgDVC,EAAgB,SAACC,GACrBd,EAAWc,GACXZ,EAAmBY,EAAWC,QAC5B,SAAA9B,GAAM,OAAIA,EAAOT,KAAKwC,cAAcC,SAASV,EAAMS,oBA8BvD,OAFAE,qBAJa,WACXC,IAAwB7B,MAAK,SAAAC,GAAG,OAAIsB,EAActB,QAGpC,IAGd,gCACE,2CACA,cAAC,EAAD,CAAcpB,QAASsC,EAAUrC,SAAUuC,IAC3C,cAAC,EAAD,CAAQ3C,MAAOuC,EAAOtC,SAxBN,SAACmD,GACnBZ,EAASY,EAAMC,OAAOrD,OACtBkC,EAAmBpB,EAAQiC,QACzB,SAAA9B,GAAM,OAAIA,EAAOT,KAAKwC,cAAcC,SAASG,EAAMC,OAAOrD,MAAMgD,sBAsBhE,2CACA,cAAC,EAAD,CAAYzC,SA9EE,SAAC6C,GACjBA,EAAME,iBACN,IAAMC,EAAY,CAAC/C,KAAM2B,EAASzB,OAAQ2B,GACpCmB,EAAY1C,EAAQ2C,MAAK,SAAAxC,GAAM,OAAIA,EAAOT,OAAS2B,KACzD,GAAIqB,EACEE,OAAOC,QAAP,UAAkBxB,EAAlB,4EACFgB,EAAsBK,EAAU7B,GAAI4B,GAAWjC,MAAK,SAAAC,GACpDqC,QAAQC,IAAItC,GACZ4B,IAAwB7B,MAAK,SAAAC,GAAG,OAAIsB,EAActB,MAClDmB,EAAY,WAAD,OACEa,EAAU/C,OAEvBoC,EAAc,QACdkB,YAAW,WACTpB,EAAY,QACX,QAEHqB,OAAM,SAAAC,GACNtB,EAAY,kBAAD,OACSa,EAAU/C,KADnB,0CAGXoC,EAAc,SACdkB,YAAW,WACTpB,EAAY,QACX,YAEA,CACLS,EAAsBI,GAAWjC,MAAK,SAAAC,GAAG,OAAIqC,QAAQC,IAAItC,MACzD,IAAMuB,EAAU,sBAAOhC,GAAP,CAAgByC,IAChCV,EAAcC,GACdJ,EAAY,SAAD,OACAa,EAAU/C,OAErBoC,EAAc,QACdkB,YAAW,WACTpB,EAAY,QACX,OA0C8BlC,KAAM2B,EAAS1B,aAhC3B,SAAC2C,GACxBhB,EAAWgB,EAAMC,OAAOrD,QA+B0DU,OAAQ2B,EAAW1B,eA7B5E,SAACyC,GAC1Bd,EAAac,EAAMC,OAAOrD,UA6BxB,yCACA,cAAC,EAAD,CAASc,QAASmB,EAAiBlB,YAtBnB,SAACE,GACfyC,OAAOC,QAAP,iBAAyB1C,EAAOT,KAAhC,QACJ2C,EAAsBlC,EAAOU,IAAIL,MAAK,SAAAC,GAAG,OACvCqC,QAAQC,IAAItC,MAEd,IAAMuB,EAAahC,EAAQiC,QAAO,SAAAkB,GAAC,OAAIA,EAAEtC,KAAOV,EAAOU,MACvDkB,EAAcC,UCpEHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9568b552.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filter shown with <input value={value} onChange={onChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react';\n\nconst Notification = ({ message, errClass }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={errClass}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react';\n\nconst PersonForm = ({ onSubmit, name, nameOnChange, number, numberOnChange}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={name} onChange={nameOnChange} />\n        number: <input value={number} onChange={numberOnChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, handleClick }) => <div>{persons.map(person => <p key={person.name}>{person.name} {person.number}<button onClick={() => handleClick(person)}>delete</button></p>)}</div>\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(res => res.data)\n}\n\nconst create = obj => {\n  const req = axios.post(baseUrl, obj)\n  return req.then(res => res.data)\n}\n\nconst remove = id => {\n  const req = axios.delete(`${baseUrl}/${id}`)\n  return req.then(res => res.data)\n}\n\nconst update = (id, number) => {\n  const req = axios.put(`${baseUrl}/${id}`, number)\n  return req.then(res => res.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport contactService from './services/contact'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ filteredPersons, setFilteredPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ query, setQuery ] = useState('')\n  const [ errorMsg, setErrorMsg ] = useState(null)\n  const [ errorClass, setErrorClass ] = useState('error')\n\n  const setPerson = (event) => {\n    event.preventDefault()\n    const newPerson = {name: newName, number: newNumber}\n    const duplicate = persons.find(person => person.name === newName)\n    if (duplicate) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`))\n        contactService.update(duplicate.id, newPerson).then(res => {\n        console.log(res)\n        contactService.getAll().then(res => updatePersons(res))\n        setErrorMsg(\n          `Updated ${newPerson.name}`\n        )\n        setErrorClass('info')\n        setTimeout(() => {\n          setErrorMsg(null)\n        }, 3000)\n        }\n      ).catch(err => {\n        setErrorMsg(\n          `Information of ${newPerson.name} has already been removed from server`\n        )\n        setErrorClass('error')\n        setTimeout(() => {\n          setErrorMsg(null)\n        }, 3000)\n      })\n    } else {\n      contactService.create(newPerson).then(res => console.log(res))\n      const newPersons = [...persons, newPerson]\n      updatePersons(newPersons)\n      setErrorMsg(\n        `Added ${newPerson.name}`\n      )\n      setErrorClass('info')\n      setTimeout(() => {\n        setErrorMsg(null)\n      }, 3000)\n    }\n  }\n  const updatePersons = (newPersons) => {\n    setPersons(newPersons)\n    setFilteredPersons(newPersons.filter(\n      person => person.name.toLowerCase().includes(query.toLowerCase())\n    ))\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  const handleQuery = (event) => {\n    setQuery(event.target.value)\n    setFilteredPersons(persons.filter(\n      person => person.name.toLowerCase().includes(event.target.value.toLowerCase())\n    ))\n  }\n  const handleClick = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`))\n    contactService.remove(person.id).then(res =>\n      console.log(res)\n    )\n    const newPersons = persons.filter(p => p.id !== person.id)\n    updatePersons(newPersons)\n  }\n  const hook = () => {\n    contactService.getAll().then(res => updatePersons(res))\n  }\n\n  useEffect(hook, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMsg} errClass={errorClass} />\n      <Filter value={query} onChange={handleQuery} />\n      <h2>add a new</h2>\n      <PersonForm onSubmit={setPerson} name={newName} nameOnChange={handleNameChange} number={newNumber} numberOnChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} handleClick={handleClick} />\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}